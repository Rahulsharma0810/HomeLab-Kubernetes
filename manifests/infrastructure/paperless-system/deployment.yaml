# HomeLab-Kubernetes/manifests/infrastructure/paperless-system/deployment.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperlessngx-data
  namespace: paperless-system
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperlessngx-media
  namespace: paperless-system
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperlessngx-export
  namespace: paperless-system
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperlessngx-consume
  namespace: paperless-system
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperlessngx-deployment
  namespace: paperless-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperlessngx
  template:
    metadata:
      labels:
        app: paperlessngx
    spec:
      containers:
      - name: paperlessngx-container
        image: ghcr.io/paperless-ngx/paperless-ngx:2.13.5
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: data-volume
          mountPath: /usr/src/paperless/data
        - name: media-volume
          mountPath: /usr/src/paperless/media
        - name: export-volume
          mountPath: /usr/src/paperless/export
        - name: consume-volume
          mountPath: /usr/src/paperless/consume
        - name: script-volume
          mountPath: /usr/src/paperless/scripts
        env:
        - name: PAPERLESS_URL
          value: https://paper.rvsharma.com
        - name: PAPERLESS_OCR_USER_ARGS
          value: '{"invalidate_digital_signatures": true}'
        - name: PAPERLESS_REDIS
          value: redis://redis-paperless-cluster.cnrds-system.svc.cluster.local:6379
        - name: PAPERLESS_DBENGINE
          value: postgresql
        - name: PAPERLESS_DBHOST
          value: pg-paperless-cluster-rw.cnpg-system.svc.cluster.local
        - name: PAPERLESS_DBNAME
          value: Paperless-pgsql
        - name: PAPERLESS_DBUSER
          valueFrom:
            secretKeyRef:
              name: cnpg-paperless-user-password
              key: username
        - name: PAPERLESS_DBPASS
          valueFrom:
            secretKeyRef:
              name: cnpg-paperless-user-password
              key: password
        - name: PAPERLESS_DBPORT
          value: "5432"
        - name: PAPERLESS_OCR_LANGUAGE
          value: eng
        - name: PAPERLESS_PRE_CONSUME_SCRIPT
          value: /usr/src/paperless/scripts/unlock.py
        - name: PAPERLESS_APPS
          value: allauth.socialaccount.providers.google
        - name: PAPERLESS_DISABLE_REGULAR_LOGIN
          value: "TRUE"
        - name: PAPERLESS_SOCIALACCOUNT_PROVIDERS
          valueFrom:
            secretKeyRef:
              name: paperless-socialaccount-providers
              key: PAPERLESS_SOCIALACCOUNT_PROVIDERS
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: paperlessngx-data
      - name: media-volume
        persistentVolumeClaim:
          claimName: paperlessngx-media
      - name: export-volume
        persistentVolumeClaim:
          claimName: paperlessngx-export
      - name: consume-volume
        persistentVolumeClaim:
          claimName: paperlessngx-consume
      - name: script-volume
        configMap:
          name: paperlessngx-scripts
          defaultMode: 493
---
apiVersion: v1
kind: Service
metadata:
  name: paperlessngx-service
  namespace: paperless-system
spec:
  selector:
    app: paperlessngx
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
