# manifests/infrastructure/openwebui/release.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: open-webui
  namespace: flux-system
spec:
  interval: 1h
  url: https://helm.openwebui.com/
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: open-webui
  namespace: openwebui
spec:
  interval: 5m
  timeout: 3m
  chart:
    spec:
      chart: open-webui
      version: "*"
      sourceRef:
        kind: HelmRepository
        name: open-webui
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    nameOverride: ""
    namespaceOverride: ""
    ollama:
      # -- Automatically install Ollama Helm chart from https://otwld.github.io/ollama-helm/. Use [Helm Values](https://github.com/otwld/ollama-helm/#helm-values) to configure
      enabled: false
      # -- If enabling embedded Ollama, update fullnameOverride to your desired Ollama name value, or else it will use the default ollama.name value from the Ollama chart
      fullnameOverride: "open-webui-ollama"

    pipelines:
      # -- Automatically install Pipelines chart to extend Open WebUI functionality using Pipelines: https://github.com/open-webui/pipelines
      enabled: false
      # -- This section can be used to pass required environment variables to your pipelines (e.g. Langfuse hostname)
      extraEnvVars: []

    # -- A list of Ollama API endpoints. These can be added in lieu of automatically installing the Ollama Helm chart, or in addition to it.
    ollamaUrls:
    - http://ollama.ollama.svc.cluster.local:11434

    # -- Disables taking Ollama Urls from `ollamaUrls`  list
    ollamaUrlsFromExtraEnv: false

    websocket:
      # -- Enables websocket support in Open WebUI with env `ENABLE_WEBSOCKET_SUPPORT`
      enabled: true
      # -- Specifies the websocket manager to use with env `WEBSOCKET_MANAGER`: redis (default)
      manager: redis
      # -- Specifies the URL of the Redis instance for websocket communication. Template with `redis://[:<password>@]<hostname>:<port>/<db>`
      url: redis://redis-openwebui-cluster.cnrds-system.svc.cluster.local:6379/0
      # -- Deploys a redis
      redis:
        # -- Enable redis installation
        enabled: false

    # -- Value of cluster domain
    clusterDomain: cluster.local

    annotations: {}
    podAnnotations: {}
    podLabels: {}
    replicaCount: 1
    # -- Strategy for updating the workload manager: deployment or statefulset
    strategy: {}
    # -- Open WebUI image tags can be found here: https://github.com/open-webui/open-webui
    image:
      repository: ghcr.io/open-webui/open-webui
      tag: ""
      pullPolicy: "IfNotPresent"

    serviceAccount:
      enable: true
      name: ""
      annotations: {}
      automountServiceAccountToken: false

    persistence:
      enabled: true
      size: 10Gi
      # -- Use existingClaim if you want to re-use an existing Open WebUI PVC instead of creating a new one
      existingClaim: ""
      # -- Subdirectory of Open WebUI PVC to mount. Useful if root directory is not empty.
      subPath: ""
      # -- If using multiple replicas, you must update accessModes to ReadWriteMany
      accessModes:
      - ReadWriteOnce
      storageClass: ""
      selector: {}
      annotations: {}
